@model COINEXEN.Core.ViewModels.RegisterViewModel
    @{ 
    ViewBag.Title = "Register";
}
<title>Kayıt Ol</title>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal py-5 container">
    <div class="text-center text-white">
        <div class="text-end">
            @Html.ActionLink("Giriş Yap", "Login", null, new { @class = "btn btn-warning" })
        </div>
        <h4 style="display:inline-block">Kayıt Ol</h4>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="form-group col-md-6 ">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  my-2 text-white px-5" })
            <div class="px-5">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6  ">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6 ">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6 ">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
       @* <div class="form-group col-md-6 ">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>*@
            <div class="form-group col-md-6 ">
                @*@Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })*@
                <div class="px-5">
                    @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })*@,
                    @Html.DropDownList("City",
                new SelectList(Enum.GetValues(typeof(City))),
                "Şehir Seç",
                new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group col-md-6 ">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6 ">
            @*@Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })*@
            <div class="px-5">
                @*@Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })*@,
                @Html.DropDownList("Sex",
                             new SelectList(Enum.GetValues(typeof(Gender))),
                             "Cinsiyet Seç",
                             new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control psw" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.RePassword, htmlAttributes: new { @class = "control-label px-5 my-2 text-white" })
            <div class="px-5">
                @Html.PasswordFor(model => model.RePassword, new { htmlAttributes = new { @class = "form-control psw" } })
                @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12 my-5">
          
                <div class="col-md-offset-12 col-md-12 text-center">
                    <input type="submit" value="Kayıt Ol" class="btn btn-success" />
                </div>
        </div>

    </div>
    </div>
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


